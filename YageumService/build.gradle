plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.mju'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

jar {
	enabled = false
}

jacoco {
	toolVersion = "0.8.11"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'com.mysql:mysql-connector-j:8.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.leopard.boot:leopard-boot-requestmapping:0.9.20'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// MSA
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Swagger 3
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Jasypt: DB 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	implementation 'org.webjars.npm:jsonwebtoken:8.5.1'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.31'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//SMTP
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.0.5'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'

	// test container
	testImplementation "org.testcontainers:junit-jupiter:1.17.2"
	testImplementation "org.testcontainers:mysql:1.17.2"

	//wire mock
	testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		html.required = true
		xml.required = true
	}
}
